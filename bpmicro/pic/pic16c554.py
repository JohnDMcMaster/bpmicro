# Based off of 17_read-cont-y_cold.cap
# md5 0fdb988186be94a062adc9d1c0019463

from bpmicro import cmd
from bpmicro.usb import validate_read
from bpmicro.usb import usb_wraps
import bpmicro.device
import struct
import binascii

import bpmicro.pic.pic16f84_fw
import bpmicro.pic.pic17c43_fw
import bpmicro.pic.pic16c554_fw as my_fw

def dev_read(dev, cont=False, verbose=False):
    bulkRead, bulkWrite, controlRead, controlWrite = usb_wraps(dev)
    config = {}

    # Generated by uvusbreplay 0.1
    # uvusbreplay copyright 2011 John McMaster <JohnDMcMaster@gmail.com>
    # cmd: /usr/local/bin/usbrply --fx2 --device 9 -j pic16c554.cap
    # Generated from packet 301/302
    # NOTE:: req max 4096 but got 3
    buff = controlRead(0xC0, 0xB0, 0x0000, 0x0000, 4096)
    # Req: 4096, got: 3
    validate_read("\x00\x00\x00", buff, "packet 301/302")
    # Generated from packet 303/304
    _prefix, buff, _size = cmd.bulk86_next_read(dev)
    validate_read("\x16", buff, "packet 303/304")
    # NOTE:: req max 512 but got 136
    # Generated from packet 309/310
    # bulk2 aggregate: packet W: 309/310, 1 to R 311/312
    buff = cmd.bulk2b(dev, 
        "\x43\x19\x04\x00\x00\x3B\x7E\x25\x00\x00\xFE\xFF\x3B\x7C\x25\x00" \
        "\x00\xFE\xFF\x00"
        )
    validate_read("\xA4\x06", buff, "packet W: 309/310, R 1 to 311/312")
    # NOTE:: req max 512 but got 35
    # Generated from packet 321/322
    # bulk2 aggregate: packet W: 321/322, 1 to R 323/324
    buff = cmd.bulk2b(dev, 
        "\x14\x38\x25\x00\x00\x04\x00\x90\x32\x90\x00\xA7\x02\x1F\x00\x14" \
        "\x40\x25\x00\x00\x01\x00\x3C\x36\x0E\x01"
        )
    validate_read(
        "\x14\x00\x54\x41\x38\x34\x56\x4C\x56\x5F\x46\x58\x34\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3E\x2C"
        , buff, "packet W: 321/322, R 1 to 323/324")
    # NOTE:: req max 512 but got 136
    # Generated from packet 349/350
    bulkWrite(0x02, "\x43\x19\x04\x00\x00")
    # Generated from packet 351/352
    bulkWrite(0x02, "\x20\x01\x00\x0C\x04")
    # Generated from packet 353/354
    cmd.cmd_41(dev)
    # Generated from packet 355/356
    # bulk2 aggregate: packet W: 355/356, 1 to R 357/358
    cmd.cmd_10(dev)
    # NOTE:: req max 512 but got 35
    # Generated from packet 367/368
    # bulk2 aggregate: packet W: 367/368, 1 to R 369/370
    cmd.cmd_45(dev)
    # NOTE:: req max 512 but got 103
    # Generated from packet 371/372
    # bulk2 aggregate: packet W: 371/372, 1 to R 373/374
    cmd.cmd_49(dev)
    # NOTE:: req max 512 but got 9
    # Generated from packet 397/398
    # bulk2 aggregate: packet W: 397/398, 1 to R 399/400
    cmd.cmd_49(dev)
    # NOTE:: req max 512 but got 11
    # Generated from packet 413/414
    cmd.cmd_3B(dev)
    # Generated from packet 415/416
    # bulk2 aggregate: packet W: 415/416, 1 to R 417/418
    cmd.cmd_4A(dev)
    # NOTE:: req max 512 but got 5
    # Generated from packet 419/420
    cmd.cmd_4C(dev)
    # Generated from packet 421/422
    buff = controlWrite(0x40, 0xB2, 0x0000, 0x0000, "")
    # Generated from packet 423/424
    cmd.cmd_50(dev, "\x5C\x00")
    # Generated from packet 425/426
    # bulk2 aggregate: packet W: 425/426, 1 to R 427/428
    buff = cmd.bulk2b(dev, 
        "\xE9\x03\x00\x00\x00\x90\x00\x00\xE9\x03\x00\x00\x00\x90\x01\x10" \
        "\xE9\x03\x00\x00\x00\x90\x00\x00\xE9\x03\x00\x00\x00\x90\x01\x80" \
        "\xE9\x02\x00\x00\x00\x90\x00\xE9\x04\x00\x00\x00\x00\x00\x00\x00" \
        "\xE9\x03\x00\x00\x00\x90\x00\x00\xE9\x03\x00\x00\x00\x90\x00\x00" \
        "\xE9\x03\x00\x00\x00\x90\x00\x00\xE9\x02\x00\x00\x00\x90\x00\x66" \
        "\xB9\x00\x00\xB2\x00\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x80\x00", buff, "packet W: 425/426, R 1 to 427/428")
    # Generated from packet 429/430
    # bulk2 aggregate: packet W: 429/430, 1 to R 431/432
    cmd.cmd_02(dev, "\x81\x00\x60\x00\x09\x00")
    # Generated from packet 433/434
    cmd.cmd_50(dev, "\xC0\x00")
    # Generated from packet 435/436
    # bulk2 aggregate: packet W: 435/436, 1 to R 437/438
    buff = cmd.bulk2b(dev, 
        "\x66\xB8\x01\x2D\x81\xE3\xFF\xFF\x00\x00\x66\xBB\x18\x00\x66\xC7" \
        "\x05\x30\x40\x00\xC0\xF0\xFF\x89\xD9\xC1\xE1\x02\x66\xC7\x81\x02" \
        "\x00\x00\x00\xF0\xFF\x66\x03\x05\xE4\x46\x00\x00\x66\x89\x05\x90" \
        "\x40\x00\xC0\x89\xDA\x81\xCA\x00\x80\x00\x00\x66\x89\x15\x50\x40" \
        "\x00\xC0\xC6\x05\x14\x22\x00\xC0\x7B\x81\xCA\x00\x40\x00\x00\x66" \
        "\x89\x15\x50\x40\x00\xC0\x89\xD9\x66\xC1\xE1\x02\x66\x89\x81\x00" \
        "\x00\x00\x00\x66\x2B\x05\xE4\x46\x00\x00\xC6\x05\x14\x22\x00\xC0" \
        "\xBB\x81\xCB\x00\x80\x00\x00\x66\x89\x1D\x50\x40\x00\xC0\x89\xC2" \
        "\x81\xE2\x07\x00\x00\x00\x03\xD2\x81\xCA\x01\x00\x00\x00\x89\xD9" \
        "\x81\xE1\x03\x00\x00\x00\xD3\xE2\xD3\xE2\xD3\xE2\xD3\xE2\xD3\xE2" \
        "\xC1\xE2\x0A\x89\xD9\x81\xE1\xFC\x03\x00\x00\x09\xCA\x88\x82\x00" \
        "\x00\x00\x40\x66\xB9\x00\x00\xB2\x00\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x81\x00", buff, "packet W: 435/436, R 1 to 437/438")
    # Generated from packet 439/440
    # bulk2 aggregate: packet W: 439/440, 1 to R 441/442
    cmd.cmd_02(dev, "\x82\x00\x20\x01\x09\x00")
    # Generated from packet 443/444
    bulkWrite(0x02, "\x57\x81\x00")
    # Generated from packet 445/446
    # bulk2 aggregate: packet W: 445/446, 1 to R 447/448
    cmd.cmd_02(dev, "\x82\x00\x20\x01\x09\x00")
    # Generated from packet 449/450
    # bulk2 aggregate: packet W: 449/450, 1 to R 451/452
    cmd.led_mask(dev, "active")
    # Generated from packet 453/454
    cmd.cmd_50(dev, "\x18\x00")
    # Generated from packet 455/456
    # bulk2 aggregate: packet W: 455/456, 1 to R 457/458
    buff = cmd.bulk2b(dev, 
        "\x66\xB8\x01\x32\x66\x89\x05\x06\x00\x09\x00\x66\xB9\x00\x00\xB2" \
        "\x00\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x82\x00", buff, "packet W: 455/456, R 1 to 457/458")
    # Generated from packet 459/460
    # bulk2 aggregate: packet W: 459/460, 1 to R 461/462
    cmd.cmd_02(dev, "\x83\x00\x40\x01\x09\x00")
    # Generated from packet 463/464
    # bulk2 aggregate: packet W: 463/464, 1 to R 465/466
    buff = cmd.bulk2b(dev, 
        "\x57\x82\x00\x20\x01\x00\x2B\x3B\x0C\x22\x00\xC0\x40\x00\x3B\x0E" \
        "\x22\x00\xC0\x00\x00\x3B\x1A\x22\x00\xC0\x18\x00\x0E\x01"
        )
    validate_read(
        "\x14\x00\x54\x41\x38\x34\x56\x4C\x56\x5F\x46\x58\x34\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3E\x2C"
        , buff, "packet W: 463/464, R 1 to 465/466")
    # Generated from packet 487/488
    # bulk2 aggregate: packet W: 487/488, 1 to R 489/490
    buff = cmd.bulk2b(dev, "\x48\x00\x10\x82\x02")
    validate_read("\x82\x00\x20\x01\x09\x00", buff, "packet W: 487/488, R 1 to 489/490")
    # Generated from packet 491/492
    bulkWrite(0x02, "\x20\x01\x00\x50\x7D\x02\x00\x00")
    # Generated from packet 493/494
    # bulk2 aggregate: packet W: 493/494, 1 to R 495/496
    buff = cmd.bulk2b(dev, bpmicro.pic.pic16f84_fw.p651)
    validate_read("\x82\x00", buff, "packet W: 493/494, R 1 to 495/496")
    # Generated from packet 497/498
    # bulk2 aggregate: packet W: 497/498, 1 to R 499/500
    cmd.cmd_02(dev, "\x83\x00\xA0\x03\x09\x00")
    # Generated from packet 501/502
    bulkWrite(0x02, "\x57\x82\x00\x50\x1D\x00\x00\x00")
    # Generated from packet 503/504
    # bulk2 aggregate: packet W: 503/504, 1 to R 505/506
    buff = cmd.bulk2b(dev, 
        "\xC7\x05\x74\x46\x00\x00\x0B\x00\x00\x00\xFF\x15\x38\x11\x00\x00" \
        "\x66\xB9\x00\x00\xB2\x00\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x83\x00", buff, "packet W: 503/504, R 1 to 505/506")
    # Generated from packet 507/508
    # bulk2 aggregate: packet W: 507/508, 1 to R 509/510
    cmd.cmd_02(dev, "\x84\x00\xC0\x03\x09\x00")
    # Generated from packet 511/512
    bulkWrite(0x02, "\x57\x83\x00\x50\x18\x3A\x00\x00")
    # Generated from packet 513/514
    # bulk2 aggregate: packet W: 513/514, 1 to R 515/516
    buff = cmd.bulk2b(dev, my_fw.p513)
    validate_read("\x84\x00", buff, "packet W: 513/514, R 1 to 515/516")
    # Generated from packet 517/518
    # bulk2 aggregate: packet W: 517/518, 1 to R 519/520
    cmd.cmd_02(dev, "\x85\x00\xE0\x3D\x09\x00")
    # Generated from packet 521/522
    bulkWrite(0x02, 
        "\x57\x84\x00\xF0\xFF\x01\x00\x00\x80\xFF\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\xFE\xFF\xFF\x7F\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF" \
        "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
        )
    # Generated from packet 523/524
    cmd.cmd_50(dev, "\xDE\x03")
    # Generated from packet 525/526
    # bulk2 aggregate: packet W: 525/526, 1 to R 527/528
    buff = cmd.bulk2b(dev, my_fw.p525)
    validate_read("\x85\x00", buff, "packet W: 525/526, R 1 to 527/528")
    # Generated from packet 529/530
    # bulk2 aggregate: packet W: 529/530, 1 to R 531/532
    cmd.cmd_02(dev, "\x86\x00\xC0\x41\x09\x00")
    # Generated from packet 533/534
    # bulk2 aggregate: packet W: 533/534, 1 to R 535/536
    cmd.check_cont(dev)
    # Generated from packet 537/538
    cmd.cmd_50(dev, "\x71\x1B")
    # Generated from packet 539/540
    # bulk2 aggregate: packet W: 539/540, 1 to R 541/542
    buff = cmd.bulk2b(dev, my_fw.p539)
    validate_read("\x86\x00", buff, "packet W: 539/540, R 1 to 541/542")
    # Generated from packet 543/544
    # bulk2 aggregate: packet W: 543/544, 1 to R 545/546
    cmd.cmd_02(dev, "\x87\x00\x40\x5D\x09\x00")
    # Generated from packet 547/548
    # bulk2 aggregate: packet W: 547/548, 1 to R 549/550
    buff = cmd.bulk2b(dev, 
        "\x57\x86\x00\x2C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x06" \
        "\x07\x08\x09\x28\x29\x2A\x2B\x2D\x2E\x2F\x30\x00\x00"
        )
    validate_read("\x01", buff, "packet W: 547/548, R 1 to 549/550")
    # Generated from packet 551/552
    bulkWrite(0x02, "\x20\x01\x00\x50\x36\x00\x00\x00")
    # Generated from packet 553/554
    # bulk2 aggregate: packet W: 553/554, 1 to R 555/556
    buff = cmd.bulk2b(dev, 
        "\x00\x00\x3C\x00\x38\x00\x34\x00\x30\x00\x00\x00\x39\x00\x35\x00" \
        "\x31\x00\x3E\x00\x2E\x00\x21\x00\x25\x00\x29\x00\x1C\x00\x20\x00" \
        "\x24\x00\x28\x00\x2C\x00\x00\x00\x04\x00\x08\x00\x0C\x00\x10\x00" \
        "\x14\x00\x18\x00\x1C\x00"
        )
    validate_read("\x87\x00", buff, "packet W: 553/554, R 1 to 555/556")
    # Generated from packet 557/558
    # bulk2 aggregate: packet W: 557/558, 1 to R 559/560
    cmd.cmd_02(dev, "\x88\x00\x80\x5D\x09\x00")
    # Generated from packet 561/562
    bulkWrite(0x02, 
        "\x1D\x40\x5D\x09\x00\x12\x00\x15\x60\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x10\x00\x00\x00\x00\x1C\x30\x00\x10\x00\x00\x00\x00\x00\x48" \
        "\x00\x50\x71\x09\x00\x00"
        )
    # Generated from packet 563/564
    # bulk2 aggregate: packet W: 563/564, 1 to R 565/566
    buff = cmd.bulk2b(dev, my_fw.p563)
    validate_read("\x88\x00", buff, "packet W: 563/564, R 1 to 565/566")
    # Generated from packet 567/568
    # bulk2 aggregate: packet W: 567/568, 1 to R 569/570
    cmd.cmd_02(dev, "\x89\x00\x00\x67\x09\x00")
    # Generated from packet 571/572
    # bulk2 aggregate: packet W: 571/572, 1 to R 573/574
    cmd.cmd_57s(dev, "\x88", "\x00\x00")
    # Generated from packet 575/576
    cmd.cmd_50(dev, "\x17\x00")
    # Generated from packet 577/578
    # bulk2 aggregate: packet W: 577/578, 1 to R 579/580
    buff = cmd.bulk2b(dev, 
        "\xC7\x05\x2C\x00\x09\x00\x24\x00\x00\x00\x66\xB9\x00\x00\xB2\x00" \
        "\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x89\x00", buff, "packet W: 577/578, R 1 to 579/580")
    # Generated from packet 581/582
    # bulk2 aggregate: packet W: 581/582, 1 to R 583/584
    cmd.cmd_02(dev, "\x8A\x00\x20\x67\x09\x00")
    # Generated from packet 585/586
    bulkWrite(0x02, "\x57\x89\x00\x50\x18\x00\x00\x00")
    # Generated from packet 587/588
    # bulk2 aggregate: packet W: 587/588, 1 to R 589/590
    buff = cmd.bulk2b(dev, 
        "\x66\xB8\x01\x32\x66\x89\x05\x06\x00\x09\x00\x66\xB9\x00\x00\xB2" \
        "\x00\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x8A\x00", buff, "packet W: 587/588, R 1 to 589/590")
    # Generated from packet 591/592
    # bulk2 aggregate: packet W: 591/592, 1 to R 593/594
    cmd.cmd_02(dev, "\x8B\x00\x40\x67\x09\x00")
    # Generated from packet 595/596
    bulkWrite(0x02, "\x57\x8A\x00\x50\x3D\x09\x00\x00")
    # Generated from packet 597/598
    # bulk2 aggregate: packet W: 597/598, 1 to R 599/600
    buff = cmd.bulk2b(dev, my_fw.p597)
    validate_read("\x8B\x00", buff, "packet W: 597/598, R 1 to 599/600")
    # Generated from packet 601/602
    # bulk2 aggregate: packet W: 601/602, 1 to R 603/604
    cmd.cmd_02(dev, "\x8C\x00\x80\x70\x09\x00")
    # Generated from packet 605/606
    # bulk2 aggregate: packet W: 605/606, 1 to R 607/608
    cmd.cmd_57s(dev, "\x8B", "\x00\x00")
    # Generated from packet 609/610
    cmd.cmd_50(dev, "\x37\x06")
    # Generated from packet 611/612
    # bulk2 aggregate: packet W: 611/612, 1 to R 613/614
    buff = cmd.bulk2b(dev, my_fw.p611)
    validate_read("\x8C\x00", buff, "packet W: 611/612, R 1 to 613/614")
    # Generated from packet 615/616
    # bulk2 aggregate: packet W: 615/616, 1 to R 617/618
    cmd.cmd_02(dev, "\x8D\x00\xC0\x76\x09\x00")

    # Generated from packet 619/620
    # bulk2 aggregate: packet W: 619/620, 1 to R 621/622
    buff = cmd.bulk2b(dev, "\x08\x01\x57\x8C\x00")
    #validate_read("\x01\x00", buff, "packet W: 619/620, R 1 to 621/622")
    config['secure'] = buff != '\x00\x00'

    # Generated from packet 623/624
    cmd.cmd_50(dev, "\xCE\x03")
    # Generated from packet 625/626
    # bulk2 aggregate: packet W: 625/626, 1 to R 627/628
    buff = cmd.bulk2b(dev, my_fw.p625)
    validate_read("\x8D\x00", buff, "packet W: 625/626, R 1 to 627/628")
    # Generated from packet 629/630
    # bulk2 aggregate: packet W: 629/630, 1 to R 631/632
    cmd.cmd_02(dev, "\x8E\x00\x90\x7A\x09\x00")
    # Generated from packet 633/634
    # bulk2 aggregate: packet W: 633/634, 1 to R 635/636
    cmd.cmd_57s(dev, "\x8D", "\x00\x00")
    # Generated from packet 763/764
    # bulk2 aggregate: packet W: 763/764, 1 to R 765/766
    cmd.cmd_57s(dev, "\x8D", "\x00\x00")
    # Generated from packet 767/768
    # bulk2 aggregate: packet W: 767/768, 1 to R 769/770
    cmd.cmd_57s(dev, "\x8A\x8B", "\x00\x00")
    # Generated from packet 771/772
    cmd.cmd_50(dev, "\x66\x26")
    # Generated from packet 773/774
    # bulk2 aggregate: packet W: 773/774, 1 to R 775/776
    buff = cmd.bulk2b(dev, my_fw.p773)
    validate_read("\x8E\x00", buff, "packet W: 773/774, R 1 to 775/776")
    # Generated from packet 777/778
    # bulk2 aggregate: packet W: 777/778, 1 to R 779/780
    cmd.cmd_02(dev, "\x8F\x00\x00\xA1\x09\x00")

    # Generated from packet 781/782
    # bulk2 aggregate: packet W: 781/782, 3 to R 817/818
    buff = cmd.bulk2b(dev, "\x08\x00\x09\x02\x57\x8E\x00")
    #validate_read(my_fw.p817, buff, "packet W: 781/782, R 3 to 817/818")
    code = buff

    # Generated from packet 819/820
    cmd.cmd_50(dev, "\x5E\x00")
    # Generated from packet 821/822
    # bulk2 aggregate: packet W: 821/822, 1 to R 825/826
    buff = cmd.bulk2b(dev, 
        "\x66\xC7\x05\x1C\x24\x00\x00\x00\x00\x66\x8B\x1D\x1C\x24\x00\x00" \
        "\x81\xE3\xFF\xFF\x00\x00\xC1\xE3\x01\x53\x5B\x66\xC7\x83\x38\x24" \
        "\x00\x00\xAD\x0B\x66\xFF\x05\x1C\x24\x00\x00\x66\x8B\x05\x1C\x24" \
        "\x00\x00\x81\xE0\xFF\xFF\x00\x00\xFF\xF0\xB8\x07\x00\x00\x00\x59" \
        "\x39\xC8\x77\xC5\x66\xB9\x00\x00\xB2\x02\xFB\xFF\x25\x44\x11\x00" \
        "\x00\x66\xB9\x00\x00\xB2\x02\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x8F\x00", buff, "packet W: 821/822, R 1 to 825/826")
    # Generated from packet 827/828
    # bulk2 aggregate: packet W: 827/828, 1 to R 829/830
    cmd.cmd_02(dev, "\x90\x00\x60\xA1\x09\x00")
    # Generated from packet 831/832
    # bulk2 aggregate: packet W: 831/832, 1 to R 833/834
    cmd.cmd_57s(dev, "\x8F", "\x00\x00")
    # Generated from packet 841/842
    cmd.cmd_50(dev, "\x46\x0C")
    # Generated from packet 843/844
    # bulk2 aggregate: packet W: 843/844, 1 to R 845/846
    buff = cmd.bulk2b(dev, my_fw.p843)
    validate_read("\x90\x00", buff, "packet W: 843/844, R 1 to 845/846")
    # Generated from packet 847/848
    # bulk2 aggregate: packet W: 847/848, 1 to R 849/850
    cmd.cmd_02(dev, "\x91\x00\xB0\xAD\x09\x00")
    # Generated from packet 853/854
    # bulk2 aggregate: packet W: 853/854, 1 to R 855/858
    cmd.cmd_57s(dev, "\x90", "\x00\x00")
    # Generated from packet 859/860
    cmd.cmd_50(dev, "\x92\x00")
    # Generated from packet 861/862
    # bulk2 aggregate: packet W: 861/862, 1 to R 865/866
    buff = cmd.bulk2b(dev, 
        "\xE9\x03\x00\x00\x00\x90\x00\x00\x66\xC7\x05\xB6\xAD\x09\x00\x00" \
        "\x00\x66\x8B\x05\xB6\xAD\x09\x00\x81\xE0\xFF\xFF\x00\x00\xFF\xF0" \
        "\xB8\x07\x00\x00\x00\x59\x39\xC8\x0F\x86\x57\x00\x00\x00\x66\x8B" \
        "\x1D\xB6\xAD\x09\x00\x81\xE3\xFF\xFF\x00\x00\xC1\xE3\x01\x66\x50" \
        "\x66\x8B\x83\x38\x24\x00\x00\xFB\x66\x50\x66\x53\x66\x51\x8A\xC8" \
        "\xFF\x15\x3C\x11\x00\x00\x66\x59\x66\x5B\xFA\x66\x58\x66\xC1\xE8" \
        "\x08\xFB\x66\x53\x66\x51\x8A\xC8\xFF\x15\x3C\x11\x00\x00\x66\x59" \
        "\x66\x5B\xFA\x66\x58\x66\x8B\x05\xB6\xAD\x09\x00\x66\xFF\x05\xB6" \
        "\xAD\x09\x00\xEB\x8C\x66\xB9\x00\x00\xB2\x00\xFB\xFF\x25\x44\x11" \
        "\x00\x00"
        )
    validate_read("\x91\x00", buff, "packet W: 861/862, R 1 to 865/866")
    # Generated from packet 867/868
    # bulk2 aggregate: packet W: 867/868, 1 to R 869/870
    cmd.cmd_02(dev, "\x92\x00\x50\xAE\x09\x00")

    # Generated from packet 871/872
    # bulk2 aggregate: packet W: 871/872, 1 to R 873/874
    #cmd.cmd_57s(dev, "\x91", "\x00\x04\x02\x04\x04\x04\x06\x04\x03\x00\x01\x00\x01\x00")
    buff = cmd.cmd_57s(dev, "\x91", None)
    def fuse_unpack(buff, i):
        return struct.unpack('<H', buff[2*i:2*i+2])[0]
    for i in xrange(0, 4):
        config['user_id%d' % i] = fuse_unpack(buff, i)
    config['misc'] = binascii.hexlify(buff[8:])

    # Generated from packet 875/876
    # bulk2 aggregate: packet W: 875/876, 1 to R 879/890
    cmd.cmd_57s(dev, "\x8D", "\x00\x00")
    # Generated from packet 891/892
    cmd.cmd_50(dev, "\x0D\x00")
    # Generated from packet 893/894
    # bulk2 aggregate: packet W: 893/894, 1 to R 897/898
    buff = cmd.bulk2b(dev, "\x66\xB9\x00\x00\xB2\x00\xFB\xFF\x25\x44\x11\x00\x00")
    validate_read("\x92\x00", buff, "packet W: 893/894, R 1 to 897/898")
    # Generated from packet 899/900
    # bulk2 aggregate: packet W: 899/900, 1 to R 901/902
    cmd.cmd_02(dev, "\x93\x00\x60\xAE\x09\x00")
    # Generated from packet 903/904
    bulkWrite(0x02, "\x57\x92\x00\x50\x1A\x00\x00\x00")
    # Generated from packet 905/906
    # bulk2 aggregate: packet W: 905/906, 1 to R 907/908
    buff = cmd.bulk2b(dev, 
        "\x66\xB9\x00\x00\xB2\x02\xFB\xFF\x25\x44\x11\x00\x00\x66\xB9\x00" \
        "\x00\xB2\x02\xFB\xFF\x25\x44\x11\x00\x00"
        )
    validate_read("\x93\x00", buff, "packet W: 905/906, R 1 to 907/908")
    # Generated from packet 909/910
    # bulk2 aggregate: packet W: 909/910, 1 to R 913/914
    cmd.cmd_02(dev, "\x94\x00\x80\xAE\x09\x00")
    # Generated from packet 915/916
    # bulk2 aggregate: packet W: 915/916, 1 to R 917/918
    cmd.cmd_57s(dev, "\x93", "\x00\x00")
    # Generated from packet 921/922
    # bulk2 aggregate: packet W: 921/922, 1 to R 923/924
    cmd.led_mask(dev, "pass")
    # Generated from packet 963/964
    # bulk2 aggregate: packet W: 963/964, 1 to R 965/966
    cmd.cmd_49(dev)

    return {'code': code, 'config': config}

class PIC16C554(bpmicro.device.Device):
    def __init__(self, dev, verbose=False):
        self.verbose = verbose
        self.dev = dev

    def read(self, opts):
        return dev_read(dev=self.dev, cont=opts.get('cont', True), verbose=opts.get('verbose', False))

    @staticmethod
    def print_config(config):
        for i in xrange(0, 4):
            print '  user_id%d:  0x%04X' % (i, config['user_id%d' % i])
        #print '  conf_word: 0x%04X' % (config['conf_word'])
        print '  secure: %s' % (config['secure'])
        print '  misc: %s' % config['misc']
